- name: Create EC2 instances
  ec2:
    key_name: "{{ key_name }}"
    region: "{{ region_name }}"
    instance_type: "{{ instance_type }}"
    image: "{{ ami_id }}"
    vpc_subnet_id: "{{ random_subnet }}"
    group: "{{ instance_name }}-sg"
    wait: yes
    instance_tags:
      Name: guru-ansible
      Env: sandbox
    count_tag: 
      Name: guru-ansible
      Env: sandbox
    exact_count: 2
    assign_public_ip: yes
  register: ec2
  
- name: Add the newly created EC2 instance(s) to the local host group
  local_action: lineinfile 
                path="inventory/ec2"
                regexp={{ item.public_ip }} 
                insertafter="[jumpstart]" line="{{ item.public_ip }} ansible_user=ec2-user ansible_ssh_private_key_file=keys/{{ key_name }}.pem ansible_ssh_extra_args='-o StrictHostKeyChecking=no'"
  with_items: "{{ ec2.instances }}"

- name: Create Target Group
  community.aws.elb_target_group:
    name: "{{target_group_name}}"
    protocol: http
    port: 80
    vpc_id: "{{vpc_id}}"
    state: present
  
- name: Register instance to target group
  community.aws.elb_target:
    target_group_name: "{{target_group_name}}"
    target_id: "{{item.id}}"
    target_port: 3000
    state: present
  with_items: "{{ec2.instances}}"

- name: Create Load Balancer
  community.aws.elb_application_lb:
        name: myelb
        security_groups:
          - sg-05f8a9662e61be816
        subnets:
          - subnet-04137af9cf50082fa
          - subnet-0d584438acae5118d
        listeners:
          - Protocol: HTTP
            Port: 80 
            DefaultActions:
              - Type: forward
                TargetGroupName: "{{target_group_name}}"
        state: present